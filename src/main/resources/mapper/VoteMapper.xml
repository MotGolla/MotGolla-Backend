<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="motgolla.domain.vote.mapper.VoteMapper">

    <insert id="insertVoteGroup">
        INSERT INTO VOTE_GROUP (ID, TITLE, MEMBER_ID, CREATED_AT, CREATED_BY)
        VALUES (VOTE_GROUP_SEQ.NEXTVAL, #{title}, #{memberId}, SYSTIMESTAMP, #{memberId})
    </insert>

    <select id="getLastInsertedVoteGroupId" resultType="long">
        SELECT VOTE_GROUP_SEQ.CURRVAL FROM DUAL
    </select>

    <select id="findProductIdsByRecordIds" resultType="long">
        SELECT PRODUCT_ID FROM RECORD WHERE ID IN
        <foreach item="id" collection="recordIds" open="(" separator="," close=")">
            #{id}
        </foreach>
    </select>

    <insert id="insertVoteCandidate">
        INSERT INTO VOTE_CANDIDATE (
        ID, VOTE_GROUP_ID, RECORD_ID, CREATED_AT, CREATED_BY
        )
        VALUES (
        VOTE_CANDIDATE_SEQ.NEXTVAL, #{voteGroupId}, #{recordId}, SYSTIMESTAMP, #{memberId}
        )
    </insert>

    <resultMap id="VoteDetailResultMap" type="motgolla.domain.vote.dto.response.VoteDetailResponse">
        <id property="voteGroupId" column="vote_group_id"/>
        <result property="title" column="title"/>
        <result property="profileImage" column="profile_image"/>
        <result property="nickname" column="nickname"/>
        <result property="mine" column="mine"/>
        <result property="votedByMe" column="voted_by_me"/>
        <result property="createdAt" column="created_at"/>

        <collection property="candidates" ofType="motgolla.domain.vote.dto.response.VoteDetailResponse$CandidateResult">
            <id property="candidateId" column="candidate_id"/>
            <result property="recordId" column="record_id"/>
            <result property="voteCount" column="vote_count"/>
            <result property="totalVotes" column="total_votes"/>
            <result property="percentage" column="percentage"/>
            <result property="imageUrl" column="image_url"/>
        </collection>
    </resultMap>
    <select id="findVoteDetails" resultMap="VoteDetailResultMap">
        SELECT
            -- 투표 그룹 정보
            vg.ID AS vote_group_id,
            vg.TITLE AS title,
            m.PROFILE AS profile_image,
            m.NAME AS nickname,
            vg.CREATED_AT AS created_at,
            CASE WHEN vg.MEMBER_ID = #{memberId} THEN 1 ELSE 0 END AS mine,
            CASE WHEN voted_check.VOTE_GROUP_ID IS NOT NULL THEN 1 ELSE 0 END AS voted_by_me,

            -- 후보 정보
            vc.ID AS candidate_id,
            vc.RECORD_ID,

            -- 득표 수: 조건에 따라 표시
            CASE
                WHEN voted_check.VOTE_GROUP_ID IS NOT NULL OR vg.MEMBER_ID = #{memberId}
                THEN NVL(vc_vote.vote_count, 0)
                ELSE NULL
            END AS vote_count,

            -- 총 투표 수: 조건에 따라 표시
            CASE
                WHEN voted_check.VOTE_GROUP_ID IS NOT NULL OR vg.MEMBER_ID = #{memberId}
                THEN NVL(vg_vote.total_votes, 0)
                ELSE NULL
            END AS total_votes,

            -- 퍼센트: 조건에 따라 표시
            CASE
                WHEN (voted_check.VOTE_GROUP_ID IS NOT NULL OR vg.MEMBER_ID = #{memberId})
                    AND NVL(vg_vote.total_votes, 0) > 0
                THEN ROUND(NVL(vc_vote.vote_count, 0) * 100 / vg_vote.total_votes)
                ELSE NULL
            END AS percentage,

            -- 대표 이미지
            ri.IMAGE_URL AS image_url

        FROM VOTE_GROUP vg

        -- 투표 작성자
        JOIN MEMBER m ON m.ID = vg.MEMBER_ID

        -- 후보 목록
        JOIN VOTE_CANDIDATE vc ON vc.VOTE_GROUP_ID = vg.ID

        -- 내가 투표한 그룹인지 확인
        LEFT JOIN (
            SELECT DISTINCT VOTE_GROUP_ID
            FROM PRODUCT_VOTE
            WHERE MEMBER_ID = #{memberId}
        ) voted_check ON voted_check.VOTE_GROUP_ID = vg.ID

        -- 후보별 투표 수
        LEFT JOIN (
            SELECT VOTE_CANDIDATE_ID, COUNT(*) AS vote_count
            FROM PRODUCT_VOTE
            GROUP BY VOTE_CANDIDATE_ID
        ) vc_vote ON vc_vote.VOTE_CANDIDATE_ID = vc.ID

        -- 그룹별 총 투표 수
        LEFT JOIN (
            SELECT VOTE_GROUP_ID, COUNT(*) AS total_votes
            FROM PRODUCT_VOTE
            GROUP BY VOTE_GROUP_ID
        ) vg_vote ON vg_vote.VOTE_GROUP_ID = vg.ID

        -- 후보 대표 이미지
        LEFT JOIN (
            SELECT RECORD_ID, MIN(IMAGE_URL) AS IMAGE_URL
            FROM RECORD_IMAGE
            WHERE IMAGE_TYPE = 'RECORD'
            GROUP BY RECORD_ID
        ) ri ON ri.RECORD_ID = vc.RECORD_ID

        <where>
            <if test="type != null and type == 'MINE'">
                vg.MEMBER_ID = #{memberId}
            </if>
            <!-- ALL일 때는 조건 없음 -->
        </where>

        ORDER BY vg.CREATED_AT DESC, vc.ID
    </select>

    <insert id="insertVote">
        INSERT INTO PRODUCT_VOTE (
            ID, MEMBER_ID, VOTE_GROUP_ID, VOTE_CANDIDATE_ID,
            CREATED_AT, CREATED_BY
        ) VALUES (
            PRODUCT_VOTE_SEQ.NEXTVAL,
            #{memberId},
            #{voteGroupId},
            #{voteCandidateId},
            SYSTIMESTAMP,
            #{memberId}
        )
    </insert>
</mapper>
